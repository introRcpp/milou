// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// count_zeroes
int count_zeroes(IntegerVector x);
RcppExport SEXP _milou_count_zeroes(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(count_zeroes(x));
    return rcpp_result_gen;
END_RCPP
}
// random_split_double
List random_split_double(NumericVector x);
RcppExport SEXP _milou_random_split_double(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(random_split_double(x));
    return rcpp_result_gen;
END_RCPP
}
// random_split_int
List random_split_int(IntegerVector x);
RcppExport SEXP _milou_random_split_int(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(random_split_int(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _milou_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// splitR_double
List splitR_double(NumericVector x, double pivot);
RcppExport SEXP _milou_splitR_double(SEXP xSEXP, SEXP pivotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type pivot(pivotSEXP);
    rcpp_result_gen = Rcpp::wrap(splitR_double(x, pivot));
    return rcpp_result_gen;
END_RCPP
}
// splitR_int
List splitR_int(IntegerVector x, int pivot);
RcppExport SEXP _milou_splitR_int(SEXP xSEXP, SEXP pivotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type pivot(pivotSEXP);
    rcpp_result_gen = Rcpp::wrap(splitR_int(x, pivot));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_milou_count_zeroes", (DL_FUNC) &_milou_count_zeroes, 1},
    {"_milou_random_split_double", (DL_FUNC) &_milou_random_split_double, 1},
    {"_milou_random_split_int", (DL_FUNC) &_milou_random_split_int, 1},
    {"_milou_rcpp_hello_world", (DL_FUNC) &_milou_rcpp_hello_world, 0},
    {"_milou_splitR_double", (DL_FUNC) &_milou_splitR_double, 2},
    {"_milou_splitR_int", (DL_FUNC) &_milou_splitR_int, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_milou(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
